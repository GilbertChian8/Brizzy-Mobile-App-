// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  name       String
  password   String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  plans      Plan[]   @relation("CreatedPlans")
  savedPlans Plan[]   @relation("SavedPlans")
}

model Plan {
  id            Int        @id @default(autoincrement())
  title         String
  description   String
  cost          Float
  image         String     @default("https://lh5.googleusercontent.com/p/AF1QipPaVD3uiJ48kuVjJYHCQGx1NUvS21_v_4DaGsci=w540-h312-n-k-no")
  averageRating Float      @default(0.0)
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  createdBy     User       @relation("CreatedPlans", fields: [createdById], references: [id])
  createdById   Int
  savedBy       User?      @relation("SavedPlans", fields: [savedById], references: [id])
  savedById     Int?
  categories    Category[]
  activities    Activity[]
  ratings       Rating[]
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String
  type  String
  plans Plan[]
}

model Activity {
  id          Int    @id @default(autoincrement())
  title       String
  description String
  image       String
  plans       Plan[]
}

model faq {
  id        Int      @id @default(autoincrement())
  question  String
  answer    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Rating {
  id        Int      @id @default(autoincrement())
  rating    Float
  createdAt DateTime @default(now())
  plan      Plan     @relation(fields: [planId], references: [id])
  planId    Int
}
